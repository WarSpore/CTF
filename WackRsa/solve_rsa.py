#!/usr/bin/env python3

from Crypto.Util.number import bytes_to_long, long_to_bytes
from random import choice
from sympy import nextprime

options = [
    121525055445937892370,
    411018710212640496012,
    468894354199772369224,
    343283324817857022177,
    856021744935956700002,
    770217388063916885395,
    986457284988185894726,
    704469366801142423503,
    638624976344220381227,
    451160315985835271876,
    572178637002244967453,
    773616061380423307229,
    173685368829509437359,
    480709496252705776851,
    820140873916416604269,
    928997877847241266181,
    526777348692429639876,
    249566447952717332767,
    735332083646685809274,
    108890241782396836855,
    227676066925204261042,
    562904432085637199759,
    918550672823004835829,
    989173406904390295149,
    372389854498809533604,
    971413884388543676874,
    932977673157268501629,
    993332388137107717657,
    225433965571508491224,
    149602573165657016957,
    940253896709618259162,
    668613365443470361846,
    204273494972347745965,
    879351719572327283008,
    668740559863504678658,
    288934471875887159062,
    600414111511738880193,
    997416624360187336677,
    948241152818780701860,
    958699278657286619244,
    858153231767487010531,
    640577482394793575139,
    966806403520140275439,
    953912034418209634360,
    545414676005275027705,
    247429396910321700863,
    921092472498575000937,
    288118129868775069513,
    652277965630557959965,
    393177371662864949301,
]

def genPrime():
    return nextprime((choice(options) * choice(options)) ** 5)

ct = 352302726295371001413283900690238035034566038978578124577963500149740516584776681123070729328836442319248184095023886003444989729377134084252455774719151685863496764300621318172285791564090280793691034402517807006872240123308620751031380614599885037591218280084356329866423642066486340307086314747626640876035259526863645265787627675342508623984530980010559178663076342582283788689375134433543408465803058817410051925
n = 623505217738877702373875249487464835817363487698750357922212821183726651741231727665491769024830644362969077195768052141886031928636651848368264801088436503652649619091360786069689785785078551939270282816158564392809690277222158679241474486776060042330601186534091796139908783413797325173324419085603020284723721569473820122707485955676597572546197304210706691356741719085140930225872956854702405633390432505064624191
e = 65537

for i in options:
    for b in options:
        p = nextprime((i*b)**5)
        q = n//p
        phi = (p-1) * (q-1)
        d = pow(e, -1, int(phi))
        ptxt = pow(ct,d,int(n))

        # Convert the plaintext from long to bytes
        ptxt_bytes = long_to_bytes(ptxt)
        # Decode the bytes as ASCII text
        if b"S2G{" in ptxt_bytes:
            print(ptxt_bytes)